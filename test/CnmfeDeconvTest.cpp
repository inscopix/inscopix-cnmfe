#include "isxCnmfeDeconv.h"
#include "isxTest.h"
#include "catch.hpp"

TEST_CASE("CnmfeDeconvEstimateTimeConst", "[cnmfe-deconv]")
{
    const isx::ColumnFloat_t inTrace = {
        15.9087785f, 39.093574f, 37.0103463f, 63.2176322f, 25.0918832f,
        52.0427554f, 52.2357718f, 68.6220029f, 48.9686648f, 29.5139094f
    };

    const float inNoise = 5.0f;
    const uint32_t lags = 5;
    const float inFudgeFactor = 1.0f;

    std::vector<float> outARParams;

    SECTION("Second Order AR")
    {
        const float inFirstOrderAR = false;

        isx::estimateTimeConst(inTrace, inNoise, lags, inFudgeFactor, inFirstOrderAR, outARParams);

        const std::vector<float> expArParams = {0.235851f, -0.0128607f};

        REQUIRE(approxEqual(outARParams[0], expArParams[0], 1e-5));
        REQUIRE(approxEqual(outARParams[1], expArParams[1], 1e-5));
    }

    SECTION("First Order AR")
    {
        const float inFirstOrderAR = true;

        isx::estimateTimeConst(inTrace, inNoise, lags, inFudgeFactor, inFirstOrderAR, outARParams);

        const std::vector<float> expArParams = {0.150264f};

        REQUIRE(approxEqual(outARParams[0], expArParams[0], 1e-5));
    }
}

TEST_CASE("CnmfeDeconvolveTraces", "[cnmfe-deconv]")
{
    SECTION("OASIS AR(1)")
    {
        isx::MatrixFloat_t inRawTraces = {
            {0.07478289,-0.7791851,0.1393962,0.3316826,-0.6914189,0.483937,1.195298,-1.5717,-0.9961514,0.1351041,-0.5757684,-0.3080551,-0.1212401,0.08207657,0.4579844,0.6541771,-0.3297681,0.4573881,1.157255,0.6247014,1.35573,-0.5081656,0.7793007,0.1636641,-1.088043,10.1947,10.17875,3.789441,1.967447,1.170946,0.3811955,0.5595458,0.2533118,-0.1828294,0.596527,-0.7994132,0.024035,0.3090469,-0.04174051,0.1551008,0.2264263,0.8238515,-0.4166898,0.3338271,-0.2374361,0.03006838,0.3240554,0.08274345,0.9824636,0.3966784,0.2343384,-0.5320179,1.41489,1.234087,-0.2629832,0.9298532,0.8690571,-0.2956495,-1.000746,0.1358025,0.2571005,-0.07028896,-1.069929,-0.6999618,0.815239,-0.3935334,-0.2704821,-0.8786632,0.5195333,-0.1621386,-0.5365084,-0.3349264,-0.05619196,0.6302,-0.5009497,0.3535575,0.2010511,0.8601235,0.04998723,0.2093607,1.011346,1.258772,-0.4354081,0.1904049,-1.733586,-0.3262691,0.6759961,0.6170996,-0.1526945,0.02787536,0.1319825,-0.5923464,-0.4389878,0.3773217,1.10336,1.262165,-0.4793987,0.4273514,0.8544518,-0.3837523},
            {-2.094119,-0.06102079,-0.6809784,0.1388957,-0.5736937,0.2942127,1.032724,-0.8186219,-0.9624371,0.6675037,3.151958,1.328961,0.6869836,1.321416,0.8552511,1.33505,0.2950159,-0.801118,-0.09008564,0.2531507,1.146807,-0.3572169,0.6562678,-1.60283,-0.7435564,-1.174087,-1.168944,0.07061835,0.3178843,0.9168729,-0.1372743,-1.032897,-0.4338986,0.07405937,-1.536913,-0.807092,-2.258055,-0.7645427,0.3255893,-0.5630808,-0.2178666,-0.1952696,-0.8130881,0.3136506,1.223104,0.8272813,0.9474457,0.9097399,0.3108072,0.3650879,-0.5781635,-0.2061586,-0.5938972,0.2312865,-0.2947934,-1.172026,5.590207,16.1488,8.564711,3.45476,0.6228447,0.3764669,1.074352,-0.08544146,-1.421218,-0.0889716,-1.202991,-0.8171952,-0.3709375,-1.691642,-1.38847,-1.864075,0.3591803,-0.3082548,0.2322693,-0.7977256,-0.816964,-1.480299,-0.05150932,1.042518,0.2701001,-1.225958,0.2311528,1.441223,0.2443455,-0.3666948,0.3739933,-0.01053589,-1.187304,1.276093,0.2947797,-1.645337,-0.1221999,0.3397105,-1.362134,-1.44408,0.005181274,0.9721444,1.757944,0.4924583}
        };

        const isx::MatrixFloat_t expectedDeconvolvedTraces = {
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.073339,3.576359,2.105982,1.240133,0.7302675,0.4300269,0.2532265,0.1491155,0.08780848,0.05170709,0.03044835,0.01792988,0.01055823,0.00621734,0.003661156,0.002155916,0.001269537,0.000747582,0.000440223,0.000259231,0.000152651,8.99E-05,5.29E-05,3.12E-05,1.84E-05,1.08E-05,6.36E-06,3.75E-06,2.21E-06,1.30E-06,7.65E-07,4.51E-07,2.65E-07,1.56E-07,9.20E-08,5.42E-08,3.19E-08,1.88E-08,1.11E-08,6.52E-09,3.84E-09,2.26E-09,1.33E-09,7.83E-10,4.61E-10,2.72E-10,1.60E-10,9.42E-11,5.55E-11,3.27E-11,1.92E-11,1.13E-11,6.67E-12,3.93E-12,2.31E-12,1.36E-12,8.02E-13,4.72E-13,2.78E-13,1.64E-13,9.64E-14,5.68E-14,3.34E-14,1.97E-14,1.16E-14,6.83E-15,4.02E-15,2.37E-15,1.39E-15,8.21E-16,4.83E-16,2.85E-16,1.68E-16,9.87E-17,5.81E-17},
            {0,0,0,0,0,0,0,0,0,0,0.8379502,0.4793381,0.2741989,0.1568518,0.08972498,0.05132597,0.02936033,0.01679518,0.009607458,0.005495817,0.003143809,0.001798373,0.001028735,0.000588474,0.000336629,0.000192564,0.000110154,6.30E-05,3.60E-05,2.06E-05,1.18E-05,6.75E-06,3.86E-06,2.21E-06,1.26E-06,7.22E-07,4.13E-07,2.36E-07,1.35E-07,7.74E-08,4.43E-08,2.53E-08,1.45E-08,8.28E-09,4.74E-09,2.71E-09,1.55E-09,8.87E-10,5.07E-10,2.90E-10,1.66E-10,9.50E-11,5.43E-11,3.11E-11,1.78E-11,1.02E-11,4.173827,12.81209,7.328986,4.192448,2.398233,1.371877,0.7847639,0.4489137,0.256795,0.1468961,0.08402997,0.04806821,0.02749677,0.01572916,0.008997655,0.005146988,0.002944265,0.001684227,0.00096344,0.000551123,0.000315262,0.000180342,0.000103162,5.90E-05,3.38E-05,1.93E-05,1.10E-05,6.32E-06,3.61E-06,2.07E-06,1.18E-06,6.77E-07,3.87E-07,2.21E-07,1.27E-07,7.24E-08,4.14E-08,2.37E-08,1.36E-08,7.76E-09,4.44E-09,2.54E-09,1.45E-09,8.31E-10}
        };
        isx::MatrixFloat_t expectedS = {
            {0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,6.0733394622802734e+00,0.0000000000000000e+00,-2.3841857910156250e-07,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,1.4901161193847656e-08,0.0000000000000000e+00,-3.7252902984619141e-09,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-2.3283064365386963e-10,0.0000000000000000e+00,-1.1641532182693481e-10,0.0000000000000000e+00,-2.9103830456733704e-11,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,3.6379788070917130e-12,0.0000000000000000e+00,0.0000000000000000e+00,-9.0949470177292824e-13,4.5474735088646412e-13,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,5.6843418860808015e-14,2.8421709430404007e-14,0.0000000000000000e+00,-1.4210854715202004e-14,7.1054273576010019e-15,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,4.4408920985006262e-16,-4.4408920985006262e-16,2.2204460492503131e-16,0.0000000000000000e+00,0.0000000000000000e+00,2.7755575615628914e-17,0.0000000000000000e+00,-1.3877787807814457e-17,6.9388939039072284e-18,0.0000000000000000e+00,-3.4694469519536142e-18,0.0000000000000000e+00,0.0000000000000000e+00,4.3368086899420177e-19,-4.3368086899420177e-19,2.1684043449710089e-19,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-1.3552527156068805e-20,0.0000000000000000e+00,3.3881317890172014e-21,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-5.2939559203393771e-23,0.0000000000000000e+00,2.6469779601696886e-23,0.0000000000000000e+00,0.0000000000000000e+00,6.6174449004242214e-24},
            {0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,8.3795338869094849e-01,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,4.1738286018371582e+00,1.0424509048461914e+01,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-7.4505805969238281e-09,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-5.8207660913467407e-11,0.0000000000000000e+00,0.0000000000000000e+00,0.0000000000000000e+00,-7.2759576141834259e-12,0.0000000000000000e+00,-3.6379788070917130e-12,0.0000000000000000e+00,9.0949470177292824e-13,0.0000000000000000e+00,2.2737367544323206e-13,0.0000000000000000e+00,0.0000000000000000e+00,-5.6843418860808015e-14,-2.8421709430404007e-14,0.0000000000000000e+00,0.0000000000000000e+00,-7.1054273576010019e-15,0.0000000000000000e+00,0.0000000000000000e+00,8.8817841970012523e-16,-8.8817841970012523e-16,4.4408920985006262e-16,0.0000000000000000e+00,-1.1102230246251565e-16,5.5511151231257827e-17}
        };
        isx::ColumnFloat_t expectedSn = {1.0, 1.0};

        isx::DeconvolutionParams inDeconvParams;
        isx::MatrixFloat_t outDeconvolvedTraces;
        isx::MatrixFloat_t outS;
        isx::ColumnFloat_t outSn;
        const size_t inNumIterations = 1;
        isx::deconvolveTraces(inRawTraces, outDeconvolvedTraces, outS, outSn, inDeconvParams, inNumIterations);

        for (size_t i = 0; i < inRawTraces.n_rows; i++)
        {
            REQUIRE(approxEqual(arma::norm_dot(outDeconvolvedTraces.row(i), expectedDeconvolvedTraces.row(i)), 1., 1e-5));
            REQUIRE(approxEqual(arma::norm_dot(outS.row(i), expectedS.row(i)), 1., 1e-5));
        }
        REQUIRE(arma::approx_equal(outSn, expectedSn, "rel_tol", 1e-5));
    }
}
